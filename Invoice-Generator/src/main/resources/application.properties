## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

#debug=true
logging.level.org.springframework.context=DEBUG
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/Users/AOE/uploads

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.url=jdbc:h2:file:C:/data/sample
#spring.h2.console.enabled=true

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/ems
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

## Hibernate/JPA Configuration
#spring.jpa.hibernate.ddl-auto=update
## (options: validate | update | create | create-drop)
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true

# Optional: Connection Pool Settings (HikariCP is default in Spring Boot)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

server.port = 9090
        
